name: Notify Discord for PRs to main

on:
  pull_request:
    branches: [ main ]
    types: [opened, reopened]

jobs:
  notify-discord:
    runs-on: ubuntu-latest

    steps:
      # --- Sanity check the trigger ---
      - name: Debug event info
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Action: ${{ github.event.action }}"
          echo "Base branch: ${{ github.base_ref }}"
          echo "Head branch: ${{ github.head_ref }}"
          echo "PR URL: ${{ github.event.pull_request.html_url }}"
          echo "Webhook secret set?: ${{ secrets.DISCORD_WEBHOOK_URL != '' }}"
          echo "Assignees: ${{ toJson(github.event.pull_request.assignees) }}"

      # --- Fail early if webhook secret is missing ---
      - name: Check webhook secret
        run: |
          if [ -z "${{ secrets.DISCORD_WEBHOOK_URL }}" ]; then
            echo "❌ DISCORD_WEBHOOK_URL secret is missing!"
            exit 1
          fi
          echo "✅ Webhook secret found."

      # --- Build message with assignee mentions (using DISCORD_MAP_JSON) ---
      - name: Build message content
        id: build
        uses: actions/github-script@v7
        env:
          DISCORD_MAP_JSON: ${{ vars.DISCORD_MAP_JSON || secrets.DISCORD_MAP_JSON }}
        with:
          script: |
            const pr = context.payload.pull_request;
            const url = pr.html_url;
            const title = pr.title;
            const author = pr.user.login;

            // Assignees only (as requested)
            const assignees = (pr.assignees || []).map(u => u.login);

            // Try to parse the GitHub->Discord ID map
            let map = {};
            try { map = JSON.parse(process.env.DISCORD_MAP_JSON || "{}"); }
            catch (e) { console.log("Invalid DISCORD_MAP_JSON, proceeding without hard pings."); }

            // Build mention list: <@id> if mapped, else @username (non-pinging fallback)
            const mentions = assignees.map(u => map[u] ? `<@${map[u]}>` : `@${u}`);

            if (mentions.length) {
              console.log("Mentions to send:", mentions.join(' '));
            } else {
              console.log("No assignees to mention.");
            }

            const lines = [];
            if (mentions.length) lines.push(mentions.join(' '));
            lines.push(`**New PR to main:** ${title} (by @${author})`);
            lines.push(url);

            core.setOutput('content', lines.join('\n'));

      # --- Post to Discord ---
      - name: Post PR link to Discord
        env:
          WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
          CONTENT: ${{ steps.build.outputs.content }}
        run: |
          echo "Posting to Discord..."
          payload=$(jq -n --arg content "$CONTENT" '{content:$content}')
          curl -v -H "Content-Type: application/json" -d "$payload" "$WEBHOOK"
