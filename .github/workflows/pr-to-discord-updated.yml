name: Notify Discord for PRs to main

on:
  pull_request:
    branches: [ main ]
    types: [opened, reopened]

jobs:
  notify-discord:
    runs-on: ubuntu-latest

    steps:
      - name: Debug event info
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Action: ${{ github.event.action }}"
          echo "Base branch: ${{ github.base_ref }}"
          echo "Head branch: ${{ github.head_ref }}"
          echo "PR URL: ${{ github.event.pull_request.html_url }}"
          echo "Webhook secret set?: ${{ secrets.DISCORD_WEBHOOK_URL != '' }}"
          echo "Assignees JSON:"
          echo '${{ toJson(github.event.pull_request.assignees) }}'

      - name: Check webhook secret
        run: |
          if [ -z "${{ secrets.DISCORD_WEBHOOK_URL }}" ]; then
            echo "❌ DISCORD_WEBHOOK_URL secret is missing!"
            exit 1
          fi
          echo "✅ Webhook secret found."

      - name: Build message + mentions
        id: build
        uses: actions/github-script@v7
        env:
          DISCORD_MAP_JSON: ${{ vars.DISCORD_MAP_JSON || secrets.DISCORD_MAP_JSON }}
        with:
          script: |
            const pr = context.payload.pull_request;
            const url = pr.html_url;
            const title = pr.title;
            const author = pr.user.login;

            // Assignees to ping
            const assignees = (pr.assignees || []).map(u => u.login);

            // Parse GH->Discord ID map
            let map = {};
            try { map = JSON.parse(process.env.DISCORD_MAP_JSON || "{}"); }
            catch (e) { console.log("⚠️ DISCORD_MAP_JSON not valid JSON; continuing without hard pings."); }

            // Build <@id> mentions (ping) and collect IDs for allowed_mentions
            const ids = [];
            const display = assignees.map(u => {
              const id = map[u];
              if (id) { ids.push(id); return `<@${id}>`; }
              return `@${u}`; // visible fallback (no ping)
            });

            console.log("Assignee GH users:", assignees);
            console.log("Resolved Discord IDs:", ids);

            const header = display.length ? display.join(' ') + '\n' : '';
            const content = `${header}**New PR to main:** ${title} (by @${author})\n${url}`;

            core.setOutput('content', content);
            core.setOutput('users_json', JSON.stringify(ids));

      - name: Post to Discord
        env:
          WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
          CONTENT: ${{ steps.build.outputs.content }}
          USERS_JSON: ${{ steps.build.outputs.users_json }}
        run: |
          echo "Posting to Discord..."
          payload=$(jq -n --arg content "$CONTENT" --argjson users "$USERS_JSON" \
                     '{content:$content, allowed_mentions:{users:$users}}')
          curl -v -H "Content-Type: application/json" -d "$payload" "$WEBHOOK"
